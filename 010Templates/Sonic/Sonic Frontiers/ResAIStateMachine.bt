//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.1.0
//   Purpose: 
//  Category: 
// File Mask: *.aism
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local uint64 dataPos;

typedef struct{
    StringOffset name;
    StringOffset name2;
    int64 unk0;
}Condition<optimize=false>;

typedef struct{
    int64 conditionOffset;
    int64 unk;
    int64 dataPtr;
    int64 unk;
    local int64 prePos = FTell();
    FSeek(conditionOffset + dataPos);
    Condition condition;
    FSeek(prePos);
}StateData2<optimize=false>;

typedef struct{
    StringOffset StateName;
    int64 unk;
    int64 offset;
    int64 count;
    local int64 prePos = FTell();
    FSeek(offset + dataPos);
    StateData2 stateData[count];
    FSeek(prePos);
}StateData<optimize=false>;

typedef struct{
    StringOffset name;
    StringOffset name2;
}UnkStr<optimize=false>;

typedef struct{
    SetRandomBackColor();
    StringOffset StateName;
    StringOffset ActionName;
    int16 Unk1[4];
    int64 stateDataOffset;
    uint64 stateDataCount;
    uint64 Unkoffset;
    uint64 Unkcount;
    local int64 prePos = FTell();
    FSeek(stateDataOffset + dataPos);
    StateData stateData[stateDataCount];
    FSeek(Unkoffset + dataPos);
    UnkStr unkStr[Unkcount];
    FSeek(prePos);
}State<optimize=false, read=Str("%s -- %s",  ReadString(dataPos + ActionName.off), ReadString(dataPos + StateName.off))>;

typedef struct{
    SetRandomBackColor();
	int64 tableOffset;
    uint64 Count;
    FSeek(tableOffset + dataPos);
    State States[Count];
}
ResAIStateMachine<open=true>;

ResBinaryFile file("ResAIStateMachine")<name=Str("%s", FileNameGetBase(GetFileName()))>;