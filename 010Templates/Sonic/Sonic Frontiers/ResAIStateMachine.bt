//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.1.0
//   Purpose: 
//  Category: 
// File Mask: .aism
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local uint64 dataPos;

typedef struct{
    uint64 Offset<hidden=true>;
    if(Offset != 0) {
        local uint64 PrePos<hidden=true> = FTell();
        FSeek(Offset+dataPos);
        StringOffset Unk1;
        FSeek(PrePos);
    }
}UnkStr;

typedef struct{
    SetRandomBackColor();
    uint32 Unk1[2];
    UnkStr Unk2;
    uint64 Unk3;
    UnkStr Unk4;
    uint64 Unk5;
    StringOffset StateName;
    StringOffset ActionName;
}State<optimize=false, read=Str("%s",  ReadString(dataPos + ActionName.off))>;

typedef struct{
    SetRandomBackColor();
	char signature[4]<name="Signature">;
	int version <format=hex, name="Version">;
    uint32 Count;
    uint32 padding;
    StringOffset Unk1;
    StringOffset Unk2;
    State States[Count];
}
ResAIStateMachine<open=true>;

ResBinaryFile file("ResAIStateMachine")<name=Str("%s", FileNameGetBase(GetFileName()))>;