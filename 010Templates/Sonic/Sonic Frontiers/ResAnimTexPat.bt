//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.1.0
//   Purpose: 
//  Category: 
// File Mask: *.pt-anim
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local int32 RELATIVE_OFFSET = 0x18;
local int32 STRING_TABLE_OFFSET = 0;
local int32 STRING2_TABLE_OFFSET = 0;

typedef struct{
	SetRandomBackColor();
	float X, Y, Z;
}FloatVector3<optimize=false, read=Str("(%f, %f, %f)", X, Y, Z)>;

typedef struct{
	SetRandomBackColor();
	byte type;
	byte padding[3]<hidden=true>;
	uint32 Length;
	uint32 IndexStart;
	uint32 unk1;
	uint32 unk2;
}PtFrameInfo<optimize=false, read=Str("Type: %1.0f, Length: %1.0f, IndexStart: %1.0f", type, Length, IndexStart)>;

typedef struct{
	SetRandomBackColor();
	uint32 offset<hidden=true>;
	local uint32 PrePos<hidden=true> = FTell();
	FSeek(offset + RELATIVE_OFFSET);
	uint32 PtAnimNameOffset <read=ReadString(this+STRING_TABLE_OFFSET)>;
	float FPS;
	float FrameStart;
	float FrameEnd;
	uint32 FrameInfoCount;
	PtFrameInfo FrameInfos[FrameInfoCount];
	FSeek(PrePos);
}PtAnim<optimize=false, read=Str("%s -- Frame Length: %1.0f - %1.0f", ReadString(PtAnimNameOffset+STRING_TABLE_OFFSET), FrameStart, FrameEnd)>;

typedef struct{
	SetRandomBackColor();
	float frame;
	float value;
}
Keyframe<optimize=false, read=Str("Frame: %1.0f, Value: %f", frame, value)>;

typedef struct{
	SetRandomBackColor();
	uint32 MatNameOffset <read=ReadString(this+STRING_TABLE_OFFSET)>;
	uint32 TexNameOffset <read=ReadString(this+STRING_TABLE_OFFSET)>;
	uint32 Count;
	PtAnim PtAnims[Count];
}
AnimTexPat;

typedef struct{
	SetRandomBackColor();
	uint32 Ptr <hidden=true>;
	local uint32 PrePos<hidden=true> = FTell();
	FSeek(Ptr + RELATIVE_OFFSET);
	AnimTexPat data;
	FSeek(PrePos);
}
AnimTexPatPtr;

typedef struct{
	SetRandomBackColor();
	AnimTexPatPtr animTexPatPtr<name = "AnimTexPatPtr">;
	uint32 AnimTexPatSize;
	uint32 KeyFramesPtr;
	uint32 KeyFramesSize;
	local int KeyFramesCount = KeyFramesSize/8;
    local uint32 j<hidden=true> = FTell();
    FSeek(KeyFramesPtr+RELATIVE_OFFSET);
    Keyframe KeyFrames[KeyFramesCount];
    FSeek(j);
	uint32 StringPtr;
	STRING_TABLE_OFFSET = RELATIVE_OFFSET + StringPtr;
	uint32 StringSize;
	local uint32 h<hidden=true> = FTell();
	FSeek(STRING_TABLE_OFFSET);
	char StringTable[StringSize];
	FSeek(h);
	uint32 String2Ptr;
	STRING2_TABLE_OFFSET = RELATIVE_OFFSET + String2Ptr;
	uint32 String2Size;
	FSeek(STRING2_TABLE_OFFSET);
	char String2Table[String2Size];
}
MirageAnimation;

typedef struct{
	SetRandomBackColor();
	uint32 Ptr <hidden=true>;;
	local uint32 PrePos<hidden=true> = FTell();
	FSeek(Ptr);
	MirageAnimation data;
	FSeek(PrePos);
}
MirageAnimationPtr;

typedef struct{
    SetRandomBackColor();
	int FileSize;
	int Version;
	int DataSize;
	MirageAnimationPtr Data;
	uint32 Ptr <hidden=true>;;
	FSeek(Ptr);
	uint32 OffsetCount;
	uint32 Offsets[OffsetCount];
}
ResAnimTexPat<open=true>;

BigEndian();
ResAnimTexPat File;