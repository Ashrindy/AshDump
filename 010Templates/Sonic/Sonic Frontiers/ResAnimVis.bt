//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.1.0
//   Purpose: 
//  Category: 
// File Mask: *.vis-anim
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local int32 RELATIVE_OFFSET = 0x18;
local int32 STRING_TABLE_OFFSET = 0;

typedef struct{
	SetRandomBackColor();
	uint32 offset<hidden=true>;
	local uint32 PrePos<hidden=true> = FTell();
	FSeek(offset + RELATIVE_OFFSET);
	uint32 BoneNameOffset <read=ReadString(this+STRING_TABLE_OFFSET)>;
	float FPS;
	float FrameStart;
	float FrameEnd;
	uint32 unk8;
	uint16 unk9;
	uint16 unk10;
	uint32 FrameLength;
	uint32 StartIndex;
	FSeek(PrePos);
}Bone<optimize=false, read=ReadString(BoneNameOffset+STRING_TABLE_OFFSET)>;

typedef struct{
	SetRandomBackColor();
	float frame;
	float value;
}
Keyframe<optimize=false, read=Str("Frame: %1.0f, Value: %1.0f", frame, value)>;

typedef struct{
	SetRandomBackColor();
	uint32 ModelNameOffset <read=ReadString(this+STRING_TABLE_OFFSET)>;
	uint32 InputNameOffset <read=ReadString(this+STRING_TABLE_OFFSET)>;
	uint32 Count;
	Bone Bones[Count];
}
AnimVis;

typedef struct{
	SetRandomBackColor();
	uint32 Ptr <hidden=true>;
	local uint32 PrePos<hidden=true> = FTell();
	FSeek(Ptr + RELATIVE_OFFSET);
	AnimVis data;
	FSeek(PrePos);
}
AnimVisPtr;

typedef struct{
	SetRandomBackColor();
	AnimVisPtr animVisPtr<name = "AnimVisPtr">;
	uint32 AnimVisSize;
	uint32 KeyFramesPtr;
	uint32 KeyFramesSize;
	local int KeyFramesCount = KeyFramesSize/8;
    local uint32 j<hidden=true> = FTell();
    FSeek(KeyFramesPtr+RELATIVE_OFFSET);
    Keyframe KeyFrames[KeyFramesCount];
    FSeek(j);
	uint32 StringPtr;
	STRING_TABLE_OFFSET = RELATIVE_OFFSET + StringPtr;
	uint32 StringSize;
}
MirageAnimation;

typedef struct{
	SetRandomBackColor();
	uint32 Ptr <hidden=true>;;
	local uint32 PrePos<hidden=true> = FTell();
	FSeek(Ptr);
	MirageAnimation data;
	FSeek(PrePos);
}
MirageAnimationPtr;

typedef struct{
    SetRandomBackColor();
	int FileSize;
	int Version;
	int DataSize;
	MirageAnimationPtr Data;
	uint32 Ptr <hidden=true>;;
	FSeek(Ptr);
	uint32 OffsetCount;
	uint32 Offsets[OffsetCount];
}
ResAnimVis<open=true>;

BigEndian();
ResAnimVis File;