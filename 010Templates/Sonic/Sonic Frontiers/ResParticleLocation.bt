//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.1.0
//   Purpose: 
//  Category: 
// File Mask: *.effdb
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local uint64 dataPos;

typedef struct{
	SetRandomBackColor();
	byte attachedToBone;
	byte unk1;
	byte unk2;
	byte unk3;
	uint32 unk4;
	StringOffset particleName;
	StringOffset boneName;
	uint64 offset2;
	Vector3 position;
	int32 unk5;
	Quaternion rotation;
	Vector3 scale;
	int32 unk6;
}Particle<optimize=false, read=Str("%s -> %s",  ReadString(dataPos + particleName.off), ReadString(dataPos + boneName.off))>;

typedef struct
{
    SetRandomBackColor();
    StringOffset name;
    uint64 count;
    uint64 Offset;
    uint64 count1;
    uint64 offset1;
	local int64 prePos = FTell();
	FSeek(Offset + dataPos);
	Particle particles[count];
	FSeek(offset1 + dataPos);
	StringOffset soundNames[count1];
	FSeek(prePos);
}State<optimize=false, read=Str("%s",  ReadString(dataPos + name.off))>;

typedef struct{
    SetRandomBackColor();
	char signature[4]<name="Signature">;
	int version <format=hex, name="Version">;
    uint64 Count;
    uint64 tableOffset;
	FSeek(tableOffset + dataPos);
	State States[Count]<name="States">;
}
ResParticleLocation<open=true>;

ResBinaryFile file("ResParticleLocation")<name=Str("%s", FileNameGetBase(GetFileName()))>;