//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.0.1
//   Purpose: 
//  Category: 
// File Mask: *.pba
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local uint64 dataPos;

typedef struct{
    Vector4 rows[4];
}Matrix4x4<optimize=false>;

typedef struct{
    SetRandomBackColor();
    StringOffset unkName;
    int unk;
    float unk2;
    Matrix4x4 mat;
}UnkStruct<optimize=false>;

typedef struct{
    SetRandomBackColor();
    StringOffset BoneName;
    float unk;
    int16 unks[10];
}bone<optimize=false>;

typedef struct{
    SetRandomBackColor();
    float unk[2];
    int16 unks[2];
}boneunk<optimize=false>;

typedef struct{
    SetRandomBackColor();
    StringOffset unkName;
    float test[2];
    Matrix4x4 mat;
    bone bones[72];
    boneunk boneunks[323];
}UnkStruct2<optimize=false>;

typedef struct{
    SetRandomBackColor();
	char signature[4]<name="Signature">;
	int version <format=hex, name="Version">;
    StringOffset SkeletonName;
    uint64 Count;
    uint64 offset;
    uint64 padding;
    uint64 Count2;
    uint64 offset2;
    uint64 padding2;
    FSeek(offset + dataPos);
    UnkStruct unkStructs[Count];
    FSeek(offset2 + dataPos);
    UnkStruct2 unkStructs2[Count2];
}
ResPhysicalSkeleton<open=true>;

ResBinaryFile file("ResPhysicalSkeleton")<name=Str("%s", FileNameGetBase(GetFileName()))>;