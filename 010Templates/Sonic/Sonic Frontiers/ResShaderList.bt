//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: Ashrindy
//   Version: 0.1.0
//   Purpose: 
//  Category: 
// File Mask: *.shader-list
//  ID Bytes: 
//   History: 
//------------------------------------------------


#include "../include.h"

local uint64 dataPos;

typedef struct{
	SetRandomBackColor();
    StringOffset Name;
	uint Unk;
	uint Unk1<hidden=true>;
}
InputName<optimize=false, read=Str("%s",  ReadString(dataPos + Name.off))>;

typedef struct{
    SetRandomBackColor();
    StringOffset TypeName;
    StringOffset ShaderName;
}Shader<optimize=false>;

typedef struct{
    SetRandomBackColor();
    int64 arraypos;
    int64 arraycount;
    local int64 prePos = FTell();
    FSeek(arraypos + dataPos);
    Shader shaders[arraycount];
    FSeek(prePos);
}Shaders;

typedef struct{
    SetRandomBackColor();
	char signature[4]<name="Signature">;
	int version <format=hex, name="Version">;
	uint64 Unk<hidden=true>;
	uint64 Count;
    Shaders shaders;
	InputName Inputs[Count];
}
ResShaderList<open=true>;

ResBinaryFile file("ResShaderList")<name=Str("%s", FileNameGetBase(GetFileName()))>;